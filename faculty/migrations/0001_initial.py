# Generated by Django 4.2.19 on 2025-02-12 00:09

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LecturerDashboardCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(choices=[('file-upload', 'file-upload'), ('book', 'book'), ('edit', 'edit'), ('chart-line', 'chart-line')], max_length=50)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('action_text', models.CharField(max_length=50)),
                ('url_name', models.CharField(help_text='Name of the URL pattern for this action', max_length=200)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentDashboardCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(choices=[('book-open', 'book-open'), ('tasks', 'tasks'), ('chart-line', 'chart-line'), ('download', 'download')], max_length=50)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('action_text', models.CharField(max_length=50)),
                ('url_name', models.CharField(help_text='Name of the URL pattern for this action', max_length=200)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='StudyMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_type', models.CharField(choices=[('lecture_notes', 'Lecture Notes'), ('slides', 'Slides'), ('textbook', 'Textbook'), ('other', 'Other')], max_length=20)),
                ('files', models.FileField(upload_to='study_materials/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'ppt', 'pptx'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.course')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.session')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='PastQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.course')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.session')),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(unique=True)),
                ('departments', models.ManyToManyField(to='faculty.department')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='past_question_images/')),
                ('page_number', models.PositiveIntegerField(default=1)),
                ('past_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='faculty.pastquestion')),
            ],
            options={
                'ordering': ['page_number'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='departments',
            field=models.ManyToManyField(to='faculty.department'),
        ),
        migrations.AddField(
            model_name='course',
            name='levels',
            field=models.ManyToManyField(to='faculty.level'),
        ),
        migrations.AddField(
            model_name='course',
            name='semesters',
            field=models.ManyToManyField(to='faculty.semester'),
        ),
    ]
